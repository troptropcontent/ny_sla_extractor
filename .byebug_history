exit
ap memo
memo.merge(ExtensionAndNumpagesToPages.new(link.text, numpages_from_link_element(link)).call)
exit
ap memo
ap memo.merge(ExtensionAndNumpagesToPages.new(link.text, numpages_from_link_element(link)).call)
ap ExtensionAndNumpagesToPages.new(link.text, numpages_from_link_element(link)).call
ap memo
exit
ap r
r = links_from_ul.each_with_object([]) do |link, memo|
        memo << ExtensionAndNumpagesToPages.new(link.text, numpages_from_link_element(link)).call
      end
ap links_from_ul
ap links_from_ul.each_with_object([]) do |link, memo|
   31:         memo << ExtensionAndNumpagesToPages.new(link.text, numpages_from_link_element(link)).call
   32:       end.flatten
exit
ap Converters::ComplexLinkToCompany.new(link_element, coresponding_ul_element(link_element)).call
ap link_element
b = base_link_elements.first
base_link_elements.map do |link_element|
          Converters::ComplexLinkToCompany.new(link_element, coresponding_ul_element(link_element)).call
        end.flatten.class
base_link_elements.map do |link_element|
          Converters::ComplexLinkToCompany.new(link_element, coresponding_ul_element(link_element)).call
        end.flatten
base_link_elements.map do |link_element|
          Converters::ComplexLinkToCompany.new(link_element, coresponding_ul_element(link_element)).call
        end
ap base_link_elements.map do |link_element|
          Converters::ComplexLinkToCompany.new(link_element, coresponding_ul_element(link_element)).call
        end.flatten
ap base_link_elements.map do |link_element|
          Converters::ComplexLinkToCompany.new(link_element, coresponding_ul_element(link_element)).call
        end
ap base_link_elements
